/*! For license information please see 847.d2c93d51.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkcontainer=self.webpackChunkcontainer||[]).push([[847,546],{1561:function(e,t,n){var r=n(8416);var u="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t},o=r.useState,i=r.useEffect,a=r.useLayoutEffect,c=r.useDebugValue;function s(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!u(e,n)}catch(r){return!0}}var f="undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement?function(e,t){return t()}:function(e,t){var n=t(),r=o({inst:{value:n,getSnapshot:t}}),u=r[0].inst,f=r[1];return a((function(){u.value=n,u.getSnapshot=t,s(u)&&f({inst:u})}),[e,n,t]),i((function(){return s(u)&&f({inst:u}),e((function(){s(u)&&f({inst:u})}))}),[e]),c(n),n};t.useSyncExternalStore=void 0!==r.useSyncExternalStore?r.useSyncExternalStore:f},7595:function(e,t,n){var r=n(8416),u=n(7248);var o="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t},i=u.useSyncExternalStore,a=r.useRef,c=r.useEffect,s=r.useMemo,f=r.useDebugValue;t.useSyncExternalStoreWithSelector=function(e,t,n,r,u){var l=a(null);if(null===l.current){var d={hasValue:!1,value:null};l.current=d}else d=l.current;l=s((function(){function e(e){if(!c){if(c=!0,i=e,e=r(e),void 0!==u&&d.hasValue){var t=d.value;if(u(t,e))return a=t}return a=e}if(t=a,o(i,e))return t;var n=r(e);return void 0!==u&&u(t,n)?t:(i=e,a=n)}var i,a,c=!1,s=void 0===n?null:n;return[function(){return e(t())},null===s?void 0:function(){return e(s())}]}),[t,n,r,u]);var v=i(e,l[0],l[1]);return c((function(){d.hasValue=!0,d.value=v}),[v]),f(v),v}},7248:function(e,t,n){e.exports=n(1561)},327:function(e,t,n){e.exports=n(7595)},5847:function(e,t,n){n.r(t),n.d(t,{create:function(){return f},createStore:function(){return u},default:function(){return l},useStore:function(){return c}});var r=function(e){var t,n=new Set,r=function(e,r){var u="function"===typeof e?e(t):e;if(!Object.is(u,t)){var o=t;t=(null!=r?r:"object"!==typeof u)?u:Object.assign({},t,u),n.forEach((function(e){return e(t,o)}))}},u=function(){return t},o={setState:r,getState:u,subscribe:function(e){return n.add(e),function(){return n.delete(e)}},destroy:function(){console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),n.clear()}};return t=e(r,u,o),o},u=function(e){return e?r(e):r},o=n(8416),i=n(327).useSyncExternalStoreWithSelector,a=!1;function c(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.getState,n=arguments.length>2?arguments[2]:void 0;n&&!a&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),a=!0);var r=i(e.subscribe,e.getState,e.getServerState||e.getState,t,n);return(0,o.useDebugValue)(r),r}var s=function(e){"function"!==typeof e&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");var t="function"===typeof e?u(e):e,n=function(e,n){return c(t,e,n)};return Object.assign(n,t),n},f=function(e){return e?s(e):s},l=function(e){return console.warn("[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`."),f(e)}}}]);
//# sourceMappingURL=847.d2c93d51.chunk.js.map