{"version":3,"file":"static/js/959.9247543a.chunk.js","mappings":"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","sources":["services/enums.ts","constants/index.tsx","features/Home/utils.ts","redux/moduleReducer.ts","hooks/useRedux.ts","utils/parserUtils.ts","services/authService/slice.ts","config/index.ts","services/constants.ts","services/public.api.ts","services/secured.api.ts","utils/cookieUtils.ts","utils/localStorageUtils.ts","../node_modules/reselect/es/defaultMemoize.js"],"sourcesContent":["export enum EnumTags {\r\n  ALL = 'all',\r\n  CMS = 'cms',\r\n  PENDINGTASK = 'PENDINGTASK',\r\n}\r\n\r\nexport enum EDirection {\r\n  ASC = 'ASC',\r\n  DESC = 'DESC',\r\n}\r\n\r\nexport enum HTTPMethod {\r\n  GET = 'GET',\r\n  POST = 'POST',\r\n}\r\n","import { EnumTags } from '@/services/enums';\r\n\r\nexport const APP_NAME = 'container';\r\n\r\nexport const TAGS: string[] = [\r\n\tEnumTags.ALL,\r\n\tEnumTags.CMS,\r\n\tEnumTags.PENDINGTASK,\r\n];\r\n","const MODULE_URL = process.env.REACT_APP_MODULE_URL;\n\nexport const getParsedCookie = (key: string) => {\n\tconst cookie = document.cookie.split(';');\n\n\tfor (let i = 0; i < cookie.length; i++) {\n\t\tconst parsedCookie = cookie[i].split('=');\n\t\tconsole.log(parsedCookie);\n\n\t\tif (parsedCookie[0].trim() === key) return parsedCookie[1];\n\t}\n\n\treturn undefined;\n};\n\nexport const setCookie = (key: string, value: string) => {\n\tconst domain = MODULE_URL?.split('http://')[1];\n\n\tdocument.cookie = `${key}=${value};domain=${domain}`;\n};\n","import authReducers from '@/services/authService/slice';\r\nimport baseApiSlice from '@/services/secured.api';\r\nimport publicKeySlice from '@/services/public.api';\r\n\r\nexport default {\r\n\tauth: authReducers,\r\n\t[baseApiSlice.reducerPath]: baseApiSlice.reducer,\r\n\t[publicKeySlice.reducerPath]: publicKeySlice.reducer,\r\n};\r\n","import { RootState } from '@/combinedReducers';\r\nimport { AppDispatch } from '@/store';\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { UploadFile } from 'antd';\r\nimport jwt, { JwtPayload } from 'jsonwebtoken';\r\nimport { v4 as uuid4 } from 'uuid';\r\n\r\nexport const parseFileObj = async (\r\n\tfile: Blob\r\n): Promise<string | ArrayBuffer | null | undefined> => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader: FileReader = new FileReader();\r\n\t\tlet base64: string | ArrayBuffer | null | undefined;\r\n\r\n\t\treader.onload = (fileLoadedEvent) => {\r\n\t\t\tbase64 = fileLoadedEvent?.target?.result;\r\n\t\t\tresolve(base64);\r\n\t\t};\r\n\r\n\t\treader.onerror = () => reject('Something wrong with the file');\r\n\t\tif (file) reader.readAsDataURL(file);\r\n\t});\r\n};\r\n\r\nexport const capitalize = (word = '', eachWord = false): string | undefined => {\r\n\tword = word.toLocaleLowerCase();\r\n\r\n\tif (!eachWord) {\r\n\t\tconst firstLetter: string = word[0].toUpperCase();\r\n\t\tconst rest: string = word.slice(1);\r\n\t\treturn `${firstLetter}${rest}`;\r\n\t}\r\n\r\n\treturn word;\r\n};\r\n\r\nexport function parseAccessToken(token: string): null | JwtPayload {\r\n\treturn jwt.decode(token) as JwtPayload | null;\r\n}\r\n\r\nexport const limitWord = (word = '', limit = 10): string => {\r\n\tif (word.length > 10) return `${word.slice(0, limit)}...`;\r\n\r\n\treturn word;\r\n};\r\n\r\nexport function parseFileList(\r\n\tfileList: string[] | UploadFile<any>[]\r\n): UploadFile<any>[] {\r\n\treturn fileList.map((file) => {\r\n\t\tconst uid = uuid4();\r\n\t\tif (typeof file === 'string') {\r\n\t\t\treturn {\r\n\t\t\t\tuid: uid,\r\n\t\t\t\tname: uid,\r\n\t\t\t\tpreview: file,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn file;\r\n\t});\r\n}\r\n","import { useAppSelector } from '@/hooks/useRedux';\r\nimport { removeLocalStorageObjectValue } from '@/utils/localStorageUtils';\r\nimport { parseAccessToken } from '@/utils/parserUtils';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport produce from 'immer';\r\nimport { TAuthInitialState } from './types';\r\nimport { getParsedCookie, setCookie } from '@/utils/cookieUtils';\r\n\r\nconst initialState: TAuthInitialState = {\r\n\taccessToken: getParsedCookie('accessToken'),\r\n\tpublicKey: getParsedCookie('publicKey'),\r\n\tuserInfo: parseAccessToken(getParsedCookie('accessToken')),\r\n};\r\n\r\nconst authSlice = createSlice({\r\n\tname: 'auth',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetAccessToken: (\r\n\t\t\tstate: TAuthInitialState,\r\n\t\t\taction: PayloadAction<string>\r\n\t\t) => {\r\n\t\t\tsetCookie('accessToken', action.payload);\r\n\t\t\treturn produce(state, (draftState) => {\r\n\t\t\t\tdraftState.accessToken = action.payload;\r\n\t\t\t\tdraftState.userInfo = parseAccessToken(action.payload);\r\n\t\t\t});\r\n\t\t},\r\n\t\tsetPublicKey: (\r\n\t\t\tstate: TAuthInitialState,\r\n\t\t\taction: PayloadAction<string>\r\n\t\t) => {\r\n\t\t\tsetCookie('publicKey', action.payload);\r\n\r\n\t\t\treturn produce(state, (draftState) => {\r\n\t\t\t\tdraftState.publicKey = action.payload;\r\n\t\t\t});\r\n\t\t},\r\n\t\tremoveAccessToken: (state: TAuthInitialState) => {\r\n\t\t\tremoveLocalStorageObjectValue('accessToken');\r\n\t\t\treturn produce(state, (draftState) => {\r\n\t\t\t\tdraftState.accessToken = null;\r\n\t\t\t\tdraftState.userInfo = null;\r\n\t\t\t});\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { setAccessToken, removeAccessToken, setPublicKey } =\r\n\tauthSlice.actions;\r\n\r\nexport const useSelectAuth = () => useAppSelector((state) => state.auth);\r\n\r\nexport default authSlice.reducer;\r\n","export const ENV_API_URL_LOCATION = process.env.REACT_APP_API_URL_LOCATION;\r\nexport const ENV_IAM_URL = process.env.REACT_APP_IAM_URL;\r\n","import { ENV_API_URL_LOCATION, ENV_IAM_URL } from '@/config';\r\n\r\nexport const API_BASE_URL = ENV_API_URL_LOCATION;\r\nexport const DEFAULT_IAM_URL = ENV_IAM_URL || 'http://34.101.71.39:9037';\r\n\r\nexport const API_ENV = {\r\n  refetchOnFocus: true,\r\n  refetchOnReconnect: true,\r\n  refetchOnMountOrArgChange: true,\r\n};\r\n","import { TFetchResponse, TPublicKeyResponse } from '@/services/types';\r\nimport { DEFAULT_IAM_URL } from '@/services/constants';\r\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/dist/query/react';\r\n\r\nconst publicKeySlice = createApi({\r\n  reducerPath: 'publicKeySlice',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: DEFAULT_IAM_URL,\r\n  }),\r\n  endpoints: (builder) => ({\r\n    getPublicKey: builder.query<TFetchResponse<TPublicKeyResponse>, any>({\r\n      query: () => '/public/publickey',\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetPublicKeyQuery } = publicKeySlice;\r\nexport default publicKeySlice;\r\n","import {\r\n\tremoveAccessToken,\r\n\tsetAccessToken,\r\n} from '@/services/authService/slice';\r\nimport { RootState } from '@/combinedReducers';\r\nimport { TBaseQueryFn, TQueryReturnValue } from '@/services/types';\r\nimport { removeLocalStorageObjectValue } from '@/utils/localStorageUtils';\r\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/dist/query/react';\r\nimport { API_BASE_URL } from '@/services/constants';\r\nimport { TAGS } from '@/constants';\r\nimport { getParsedCookie } from '../features/Home/utils';\r\nimport { setCookie } from '@/utils/cookieUtils';\r\n\r\nconst baseQuery = fetchBaseQuery({\r\n\tbaseUrl: API_BASE_URL,\r\n\tprepareHeaders: (headers, api) => {\r\n\t\tconst state = api.getState() as RootState;\r\n\t\tif (api.endpoint !== 'login') {\r\n\t\t\tconst accessToken =\r\n\t\t\t\tstate.auth.accessToken || getParsedCookie('accessToken');\r\n\t\t\theaders.set('Authorization', `Bearer ${accessToken}`);\r\n\t\t}\r\n\t\treturn headers;\r\n\t},\r\n});\r\n\r\nconst baseQueryWithAuth: TBaseQueryFn = async (args, api, extraOptions) => {\r\n\tconst result = (await baseQuery(\r\n\t\targs,\r\n\t\tapi,\r\n\t\textraOptions\r\n\t)) as TQueryReturnValue;\r\n\r\n\tif (result.error?.data) {\r\n\t\tif (result.error?.data?.business === false) {\r\n\t\t\t// parseErrorMessage2('error.business.false');\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\t// parseErrorMessage2(result.error?.data.message);\r\n\t\tconst errMessage = result.error.data.message;\r\n\t\tif (errMessage === 'jwtverification.exception.001') {\r\n\t\t\tapi.dispatch(removeAccessToken());\r\n\t\t\tremoveLocalStorageObjectValue('accessToken');\r\n\t\t}\r\n\t}\r\n\r\n\tconst newAccessToken = result.meta?.response?.headers.get('access_token');\r\n\tif (newAccessToken) {\r\n\t\tapi.dispatch(setAccessToken(newAccessToken));\r\n\t\tsetCookie('accessToken', newAccessToken);\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\nexport const apiSlice = createApi({\r\n\tbaseQuery: baseQueryWithAuth,\r\n\ttagTypes: TAGS,\r\n\tendpoints: () => ({}),\r\n});\r\n\r\nexport default apiSlice;\r\n","const MODULE_URL = process.env.REACT_APP_MODULE_URL;\n\nexport const getParsedCookie = (key: string) => {\n\tconst cookie = document.cookie.split(';');\n\n\tfor (let i = 0; i < cookie.length; i++) {\n\t\tconst parsedCookie = cookie[i].split('=');\n\t\tif (parsedCookie[0] === key) return parsedCookie[1];\n\t}\n\n\treturn undefined;\n};\n\nexport const setCookie = (key: string, value: string) => {\n\tconst domain = MODULE_URL?.split('http://')[1];\n\n\tdocument.cookie = `${key}=${value};domain=${domain}`;\n};\n","import { APP_NAME } from '@/constants';\r\n\r\nexport const getLocalStorageObjectValue = <T>(key: string | string[]): T | undefined => {\r\n  //get value from local storage which the type of value is object\r\n  try {\r\n    if (window.localStorage.getItem(APP_NAME)) {\r\n      const getItemValue: Record<string, T> = JSON.parse(window.localStorage.getItem(APP_NAME));\r\n      if (key instanceof Array) {\r\n        return key.reduce((result, item) => {\r\n          return Object.assign(result, { [item]: getItemValue[item] });\r\n        }, {} as T);\r\n      }\r\n      return getItemValue[key] || undefined;\r\n    }\r\n    return undefined;\r\n  } catch (error) {\r\n    console.error(\r\n      `Error when get local storage object value function is triggered - LocalStorageUtils. ${error}`,\r\n    );\r\n  }\r\n\r\n  return undefined;\r\n};\r\n\r\nexport const setLocalStorageObjectItem = (value: object = {}): void => {\r\n  //set object value to local storage\r\n  try {\r\n    const getItemValue: string = window.localStorage.getItem(APP_NAME) as string;\r\n\r\n    const localStorageItem = JSON.parse(getItemValue);\r\n    if (localStorageItem && typeof localStorageItem === 'object')\r\n      return window.localStorage.setItem(\r\n        APP_NAME,\r\n        JSON.stringify({ ...localStorageItem, ...value }),\r\n      );\r\n    return window.localStorage.setItem(APP_NAME, JSON.stringify({ ...value }));\r\n  } catch (error) {\r\n    console.error(\r\n      `Error when set local storage object item function is triggered - LocalStorageUtils. ${error}`,\r\n    );\r\n  }\r\n};\r\n\r\nexport const removeLocalStorageObjectValue = (key: string | string[]): void => {\r\n  //remove the existing value from the local storage's object.\r\n  try {\r\n    const getItemValue: any = window.localStorage.getItem(APP_NAME) as string;\r\n    const localStorageItem = JSON.parse(getItemValue);\r\n    if (localStorage && typeof localStorageItem === 'object') {\r\n      if (typeof key === 'string') {\r\n        delete localStorageItem[key as string];\r\n      }\r\n\r\n      if (key instanceof Array) key.forEach((item: string) => delete localStorageItem[item]);\r\n\r\n      window.localStorage.setItem(APP_NAME, JSON.stringify(localStorageItem));\r\n    }\r\n  } catch (error) {\r\n    console.error(\r\n      `Error when remove local storage object item function is triggered - LocalStorageUtils. ${error}`,\r\n    );\r\n  }\r\n};\r\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}"],"names":["EnumTags","APP_NAME","TAGS","ALL","CMS","PENDINGTASK","getParsedCookie","key","cookie","document","split","i","length","parsedCookie","console","log","trim","_auth$baseApiSlice$re","auth","authReducers","_defineProperty","baseApiSlice","reducerPath","reducer","publicKeySlice","useAppSelector","useSelector","parseAccessToken","token","jwt","initialState","accessToken","publicKey","userInfo","authSlice","createSlice","name","reducers","setAccessToken","state","action","setCookie","payload","produce","draftState","setPublicKey","removeAccessToken","removeLocalStorageObjectValue","_authSlice$actions","actions","useSelectAuth","API_BASE_URL","process","DEFAULT_IAM_URL","createApi","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPublicKey","query","useGetPublicKeyQuery","prepareHeaders","headers","api","getState","endpoint","set","concat","baseQueryWithAuth","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","args","extraOptions","_result$error","_result$meta","_result$meta$response","result","_result$error2","_result$error2$data","newAccessToken","wrap","_context","prev","next","sent","error","data","business","abrupt","message","dispatch","meta","response","get","stop","_x","_x2","_x3","apply","arguments","apiSlice","tagTypes","MODULE_URL","value","domain","getItemValue","window","localStorage","getItem","localStorageItem","JSON","parse","Array","forEach","item","setItem","stringify","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","createCacheKeyComparator","cache","equals","entry","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","matchingEntry","find","clearCache"],"sourceRoot":""}