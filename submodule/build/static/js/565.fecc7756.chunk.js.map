{"version":3,"file":"static/js/565.fecc7756.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/react-router/index.ts","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"sourcesContent":["import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n// TODO: (v7) Change the Location generic default from `any` to `unknown` and\n// remove Remix `useLocation` wrapper.\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location<State = any> extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: State;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. This may be either a URL or the pieces\n * of a URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath, warning } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n  reloadDocument?: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on <Form>,\n * useSubmit(), <fetcher.Form>, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs<Context> {\n  request: Request;\n  params: Params;\n  context?: Context;\n}\n\n// TODO: (v7) Change the defaults from any to unknown in and remove Remix wrappers:\n//   ActionFunction, ActionFunctionArgs, LoaderFunction, LoaderFunctionArgs\n//   Also, make them a type alias instead of an interface\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction<Context = any> {\n  (args: LoaderFunctionArgs<Context>):\n    | Promise<DataFunctionValue>\n    | DataFunctionValue;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction<Context = any> {\n  (args: ActionFunctionArgs<Context>):\n    | Promise<DataFunctionValue>\n    | DataFunctionValue;\n}\n\n/**\n * Arguments passed to shouldRevalidate function\n */\nexport interface ShouldRevalidateFunctionArgs {\n  currentUrl: URL;\n  currentParams: AgnosticDataRouteMatch[\"params\"];\n  nextUrl: URL;\n  nextParams: AgnosticDataRouteMatch[\"params\"];\n  formMethod?: Submission[\"formMethod\"];\n  formAction?: Submission[\"formAction\"];\n  formEncType?: Submission[\"formEncType\"];\n  text?: Submission[\"text\"];\n  formData?: Submission[\"formData\"];\n  json?: Submission[\"json\"];\n  actionResult?: any;\n  defaultShouldRevalidate: boolean;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: ShouldRevalidateFunctionArgs): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise, return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if you could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: number[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\nexport interface UIMatch<Data = unknown, Handle = unknown> {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: Data;\n  handle: Handle;\n}\n\nexport function convertRouteMatchToUiMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UIMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle,\n  };\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/\\/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"/([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nexport class ErrorResponseImpl {\n  status: number;\n  statusText: string;\n  data: any;\n  private error?: Error;\n  private internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n// We don't want the class exported since usage of it at runtime is an\n// implementation detail, but we do want to export the shape so folks can\n// build their own abstractions around instances via isRouteErrorResponse()\nexport type ErrorResponse = InstanceType<typeof ErrorResponseImpl>;\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  ActionFunction,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  AgnosticRouteObject,\n  DataResult,\n  DeferredData,\n  DeferredResult,\n  DetectErrorBoundaryFunction,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  HTMLFormMethod,\n  ImmutableRouteKey,\n  LoaderFunction,\n  MapRoutePropertiesFunction,\n  MutationFormMethod,\n  RedirectResult,\n  RouteData,\n  RouteManifest,\n  ShouldRevalidateFunctionArgs,\n  Submission,\n  SuccessResult,\n  UIMatch,\n  V7_FormMethod,\n  V7_MutationFormMethod,\n} from \"./utils\";\nimport {\n  ErrorResponseImpl,\n  ResultType,\n  convertRouteMatchToUiMatch,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key?: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_normalizeFormMethod: boolean;\n  v7_prependBasename: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (state: RouterState): void;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UIMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    !initialMatches.some((m) => m.route.lazy) &&\n    // And we have to either have no loaders or have been provided hydrationData\n    (!initialMatches.some((m) => m.route.loader) || init.hydrationData != null);\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location);\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(newState: Partial<RouterState>): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n    subscribers.forEach((subscriber) => subscriber(state));\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    updateState({\n      ...newState, // matches, errors, fetchers go through as-is\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(\n        location,\n        newState.matches || state.matches\n      ),\n      preventScrollReset,\n      blockers,\n    });\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponseImpl;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error,\n        },\n      });\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts: { replace?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionData,\n      pendingError\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        ...(pendingActionData ? { actionData: pendingActionData } : {}),\n        ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          fetcher ? fetcher.data : undefined\n        );\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState({\n        navigation: loadingNavigation,\n        ...(actionData\n          ? Object.keys(actionData).length === 0\n            ? { actionData: null }\n            : { actionData }\n          : {}),\n        ...(revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(state, redirect.result, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath })\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher = getSubmittingFetcher(submission, existingFetcher);\n    state.fetchers.set(key, fetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our action started, so that\n        // should take precedence over this redirect navigation.  We already\n        // set isRevalidationRequired so all loaders for the new route should\n        // fire unless opted out via shouldRevalidate\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        let loadingFetcher = getLoadingFetcher(submission);\n        state.fetchers.set(key, loadingFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n\n        return startRedirectNavigation(state, actionResult, {\n          fetcherSubmission: submission,\n        });\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      { [match.route.id]: actionResult.data },\n      undefined // No need to send through errors since we short circuit above\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (fetchControllers.has(staleKey)) {\n          abortFetcher(staleKey);\n        }\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(state, redirect.result);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        ...(didAbortFetchLoads || revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher = getLoadingFetcher(\n      submission,\n      existingFetcher ? existingFetcher.data : undefined\n    );\n    state.fetchers.set(key, loadingFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(state, result);\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error,\n        },\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    let doneFetcher = getDoneFetcher(result.data);\n    state.fetchers.set(key, doneFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      fetcherSubmission,\n      replace,\n    }: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      replace?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(state.location, redirect.location, {\n      _isRedirect: true,\n    });\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.reloadDocument) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(redirect.location)) {\n        const url = init.history.createURL(redirect.location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (\n      !submission &&\n      !fetcherSubmission &&\n      formMethod &&\n      formAction &&\n      formEncType\n    ) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename\n        )\n      ),\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          return callLoaderOrAction(\n            \"loader\",\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            f.match,\n            f.matches,\n            manifest,\n            mapRouteProperties,\n            basename\n          );\n        } else {\n          let error: ErrorResult = {\n            type: ResultType.error,\n            error: getInternalRouterError(404, { pathname: f.path }),\n          };\n          return error;\n        }\n      }),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key: string, routeId: string, error: any) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error,\n      },\n      fetchers: new Map(state.fetchers),\n    });\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename,\n        { isStaticRequest: true, isRouteRequest, requestContext }\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(\n          `${method}() call aborted: ${request.method} ${request.url}`\n        );\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename,\n          { isStaticRequest: true, isRouteRequest, requestContext }\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(\n        `${method}() call aborted: ${request.method} ${request.url}`\n      );\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction isSubmissionNavigation(\n  opts: RouterNavigateOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getPathContributingMatches(contextualMatches).map((m) => m.pathnameBase),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: RouterNavigateOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponseImpl;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionData?: RouteData,\n  pendingError?: RouteData\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate:\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n        isRevalidationRequired ||\n        // Clicked the same link, resubmitted a GET form\n        currentUrl.pathname + currentUrl.search ===\n          nextUrl.pathname + nextUrl.search ||\n        // Search params affect all loaders\n        currentUrl.search !== nextUrl.search ||\n        isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some((m) => m.route.id === f.routeId)) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        defaultShouldRevalidate: isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: ShouldRevalidateFunctionArgs\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  basename: string,\n  opts: {\n    isStaticRequest?: boolean;\n    isRouteRequest?: boolean;\n    requestContext?: unknown;\n  } = {}\n): Promise<DataResult> {\n  let resultType;\n  let result;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (handler: ActionFunction | LoaderFunction) => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    let abortPromise = new Promise((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([\n      handler({\n        request,\n        params: match.params,\n        context: opts.requestContext,\n      }),\n      abortPromise,\n    ]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let values = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        if (handlerError) {\n          throw handlerError;\n        }\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, data: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(\n          new URL(request.url),\n          matches.slice(0, matches.indexOf(match) + 1),\n          basename,\n          true,\n          location\n        );\n      } else if (!opts.isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (opts.isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n        reloadDocument: result.headers.get(\"X-Remix-Reload-Document\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (opts.isRouteRequest) {\n      let queryRouteResponse: QueryRouteResponse = {\n        type:\n          resultType === ResultType.error ? ResultType.error : ResultType.data,\n        response: result,\n      };\n      throw queryRouteResponse;\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponseImpl(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`,\n  };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: DataResult[]\n): { result: RedirectResult; idx: number } | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return { result, idx: i };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || obj.type === ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n  };\n  return fetcher;\n}\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  AgnosticRouteMatch,\n  History,\n  LazyRouteFunction,\n  Location,\n  Action as NavigationType,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n  UIMatch,\n} from \"@remix-run/router\";\nimport {\n  IDLE_BLOCKER,\n  Action as NavigationType,\n  UNSAFE_convertRouteMatchToUiMatch as convertRouteMatchToUiMatch,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteMatch,\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(\n    () => ({\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation,\n    }),\n    [dataRouterContext.router.revalidate, state.revalidation]\n  );\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches(): UIMatch[] {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import type {\n  InitialEntry,\n  LazyRouteFunction,\n  Location,\n  MemoryHistory,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RouterState,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport * as React from \"react\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  _renderMatches,\n  useAsyncValue,\n  useInRouterContext,\n  useLocation,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  useRoutesImpl,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  future?: FutureConfig;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: RouterState) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n          >\n            {state.initialized ? (\n              <DataRoutes routes={router.routes} state={state} />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: FutureConfig;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getPathContributingMatches(matches).map((match) => match.pathnameBase),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import * as React from \"react\";\nimport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  ErrorResponse,\n  Fetcher,\n  HydrationState,\n  InitialEntry,\n  JsonFunction,\n  LazyRouteFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  FutureConfig as RouterFutureConfig,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  resolvePath,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  AwaitProps,\n  FutureConfig,\n  IndexRouteProps,\n  LayoutRouteProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  PathRouteProps,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n} from \"./lib/components\";\nimport {\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createRoutesFromChildren,\n  renderMatches,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  NavigateOptions,\n  Navigator,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteId,\n  useRouteLoaderData,\n  useRoutes,\n  useRoutesImpl,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  DataRouteMatch,\n  DataRouteObject,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LazyRouteFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  PathRouteProps,\n  Pathname,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n  Blocker as unstable_Blocker,\n  BlockerFunction as unstable_BlockerFunction,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useBlocker as unstable_useBlocker,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nfunction mapRouteProperties(route: RouteObject) {\n  let updates: Partial<RouteObject> & { hasErrorBoundary: boolean } = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null,\n  };\n\n  if (route.Component) {\n    if (__DEV__) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - \" +\n            \"`Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React.createElement(route.Component),\n      Component: undefined,\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (__DEV__) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" +\n            \"`ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined,\n    });\n  }\n\n  return updates;\n}\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  LocationContext as UNSAFE_LocationContext,\n  NavigationContext as UNSAFE_NavigationContext,\n  RouteContext as UNSAFE_RouteContext,\n  mapRouteProperties as UNSAFE_mapRouteProperties,\n  useRouteId as UNSAFE_useRouteId,\n  useRoutesImpl as UNSAFE_useRoutesImpl,\n};\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  ErrorResponse,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    let submit = useSubmit();\n    return <FormImpl {...props} submit={submit} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  submit: SubmitFunction | FetcherSubmitFunction;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n      });\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(\n  fetcherKey: string,\n  fetcherRouteId: string\n): FetcherSubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let { basename } = React.useContext(NavigationContext);\n\n  return React.useCallback<FetcherSubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      invariant(\n        fetcherRouteId != null,\n        \"No routeId available for useFetcher()\"\n      );\n      router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n      });\n    },\n    [router, basename, fetcherKey, fetcherRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n    (props, ref) => {\n      let submit = useSubmitFetcher(fetcherKey, routeId);\n      return <FormImpl {...props} ref={ref} submit={submit} />;\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: FetcherSubmitFunction;\n  load: (href: string) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No router available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  };\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"names":["_construct","Parent","args","Class","isNativeReflectConstruct","Reflect","construct","bind","a","push","apply","instance","Function","setPrototypeOf","prototype","arguments","_wrapNativeSuper","_cache","Map","undefined","fn","toString","call","indexOf","TypeError","has","get","set","Wrapper","getPrototypeOf","this","constructor","Object","create","value","enumerable","writable","configurable","Action","ResultType","PopStateEventType","createMemoryHistory","options","entries","_options","_options$initialEntri","initialEntries","initialIndex","_options$v5Compat","v5Compat","map","entry","index","createMemoryLocation","state","clampIndex","length","action","Pop","listener","n","Math","min","max","getCurrentLocation","to","key","location","createLocation","pathname","warning","charAt","JSON","stringify","createHref","createPath","createURL","URL","encodeLocation","path","parsePath","search","hash","Push","nextLocation","splice","delta","replace","Replace","go","nextIndex","listen","createBrowserHistory","getUrlBasedHistory","window","globalHistory","_window$location","usr","createHashHistory","_parsePath","substr","_parsePath$pathname","_parsePath$search","_parsePath$hash","startsWith","base","document","querySelector","href","getAttribute","url","hashIndex","slice","invariant","message","Error","cond","console","warn","e","getHistoryState","idx","current","_extends","random","_ref","_ref$pathname","_ref$search","_ref$hash","parsedPath","searchIndex","getLocation","validateLocation","_options2","_options2$window","defaultView","_options2$v5Compat","history","getIndex","handlePop","origin","replaceState","addEventListener","removeEventListener","historyState","pushState","error","DOMException","name","assign","immutableRouteKeys","Set","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","route","treePath","concat","_toConsumableArray","id","join","children","isIndexRoute","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","b","score","siblings","every","i","compareIndexes","routesMeta","meta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","convertRouteMatchToUiMatch","match","loaderData","params","data","handle","parentsMeta","flattenRoute","relativePath","caseSensitive","joinPaths","computeScore","forEach","_route$path","includes","_step","_iterator","_createForOfIteratorHelper","explodeOptionalSegments","s","done","exploded","err","f","segments","split","_segments","_toArray","first","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","some","filter","reduce","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","matchPath","pathnameBase","normalizePathname","generatePath","originalPath","prefix","p","String","array","keyMatch","_keyMatch","_slicedToArray","optional","param","pattern","_compilePath","paramNames","regexpSource","_","paramName","matcher","RegExp","compilePath","_compilePath2","captureGroups","memo","splatValue","decodeURIComponent","safelyDecodeURIComponent","decodeURI","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","_ref4","toPathname","_ref4$search","_ref4$hash","pop","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","json","init","responseInit","status","headers","Headers","Response","AbortedDeferredError","_Error","_inherits","_super","_createSuper","_classCallCheck","_createClass","DeferredData","reject","_this","pendingKeysSet","subscribers","deferredKeys","Array","isArray","abortPromise","Promise","r","controller","AbortController","onAbort","unlistenAbortSignal","signal","acc","_ref5","_defineProperty","trackPromise","_this2","add","promise","race","then","onSettle","catch","defineProperty","aborted","delete","undefinedError","emit","settledKey","subscriber","_this3","_this4","abort","v","k","_resolveData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this5","wrap","_context","prev","next","cancel","resolve","subscribe","sent","abrupt","stop","_x","size","_ref2","_ref6","_tracked","isTrackedPromise","_error","_data","unwrapTrackedPromise","defer","redirect","redirectDocument","response","ErrorResponseImpl","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","text","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","hasErrorBoundary","Boolean","createRouter","routerWindow","isBrowser","createElement","isServer","detectErrorBoundary","inFlightDataRoutes","dataRoutes","future","v7_normalizeFormMethod","v7_prependBasename","unlistenHistory","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialErrors","getInternalRouterError","_getShortCircuitMatch","getShortCircuitMatches","router","pendingNavigationController","initialized","m","lazy","loader","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","actionData","errors","fetchers","blockers","pendingAction","pendingPreventScrollReset","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeDeferreds","blockerFunctions","ignoreNextHistoryUpdate","updateState","newState","completeNavigation","_location$state","_location$state2","isActionReload","isMutationMethod","_isRedirect","keys","mergeLoaderData","getSavedScrollPosition","navigate","_x2","_x3","_navigate","_callee2","opts","normalizedPath","_normalizeNavigateOpt2","submission","currentLocation","userReplace","blockerKey","_context2","normalizeTo","fromRouteId","relative","normalizeNavigateOptions","shouldBlockNavigation","updateBlocker","startNavigation","pendingError","_x4","_x5","_x6","_startNavigation","_callee3","routesToUse","loadingNavigation","_getShortCircuitMatch2","notFoundMatches","_route","request","pendingActionData","actionOutput","_yield$handleLoaders","shortCircuited","_context3","startUninterruptedRevalidation","saveScrollPosition","overrideNavigation","cancelActiveDeferreds","isHashChangeOnly","createClientSideRequest","findNearestBoundary","handleAction","pendingActionError","getLoadingNavigation","Request","handleLoaders","fetcherSubmission","_x7","_x8","_x9","_x10","_x11","_handleAction","_callee4","actionMatch","boundaryMatch","_context4","interruptActiveLoads","getSubmittingNavigation","getTargetMatch","type","method","routeId","callLoaderOrAction","isRedirectResult","startRedirectNavigation","isErrorResult","isDeferredResult","_x12","_x13","_x14","_x15","_x16","_x17","_x18","_x19","_x20","_handleLoaders","_callee5","activeSubmission","_getMatchesToLoad","_getMatchesToLoad2","matchesToLoad","revalidatingFetchers","_updatedFetchers","abortPendingFetchRevalidations","_yield$callLoadersAnd","results","loaderResults","fetcherResults","fetcherKey","_processLoaderData","updatedFetchers","didAbortFetchLoads","shouldUpdateFetchers","_context5","getSubmissionFromNavigation","getMatchesToLoad","markFetchRedirectsDone","rf","fetcher","revalidatingFetcher","getLoadingFetcher","abortFetcher","callLoadersAndMaybeResolveData","findRedirect","processLoaderData","deferredData","abortStaleFetchLoads","getFetcher","_handleFetcherAction","_callee6","requestMatches","_error2","existingFetcher","abortController","fetchRequest","originatingLoadId","actionResult","doneFetcher","loadingFetcher","revalidationRequest","loadId","loadFetcher","_getMatchesToLoad3","_getMatchesToLoad4","_yield$callLoadersAnd2","_processLoaderData2","_doneFetcher","_context6","setFetcherError","getSubmittingFetcher","getDoneFetcher","staleKey","_handleFetcherLoader","_callee7","_doneFetcher2","_context7","resolveDeferredData","t0","_x33","_x34","_x35","_startRedirectNavigation","_callee8","_temp","_ref7","redirectLocation","isDocumentReload","redirectHistoryAction","_state$navigation","_context8","revalidate","reloadDocument","_x36","_x37","_x38","_x39","_x40","_callLoadersAndMaybeResolveData","_callee9","currentMatches","fetchersToLoad","_context9","all","resolveDeferredResults","_cancelledDeferredRou","deleteFetcher","markFetchersDone","_step2","_iterator2","_step3","doneKeys","_iterator3","landedId","_step4","yeetedKeys","_iterator4","_step4$value","deleteBlocker","newBlocker","blocker","_entries","blockerFunction","predicate","cancelledRouteIds","dfd","getScrollKey","y","initialize","enableScrollRestoration","positions","getPosition","getKey","fetch","_normalizeNavigateOpt","_x21","_x22","_x23","_x24","_x25","_x26","handleFetcherAction","_x27","_x28","_x29","_x30","_x31","_x32","handleFetcherLoader","dispose","clear","getBlocker","_internalFetchControllers","_internalActiveDeferreds","_internalSetRoutes","newRoutes","Symbol","prependBasename","contextualMatches","activeRouteMatch","_step5","_iterator5","hasNakedIndexQuery","normalizeFormMethod","isFetcher","body","isSubmissionNavigation","isValidMethod","searchParams","getInvalidBodyError","rawFormMethod","toUpperCase","stripHashFromPath","FormData","URLSearchParams","_ref3","_ref12","parse","convertFormDataToSearchParams","convertSearchParamsToFormData","append","getLoaderMatchesUntilBoundary","boundaryId","boundaryMatches","findIndex","values","currentUrl","nextUrl","navigationMatches","currentLoaderData","currentMatch","isNew","isMissingData","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","defaultShouldRevalidate","isNewRouteInstance","fetcherMatches","fetcherMatch","currentPath","loaderMatch","arg","shouldRevalidate","routeChoice","loadLazyRouteModule","_x60","_x61","_x62","_loadLazyRouteModule","_callee15","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","staticRouteValue","isPropertyStaticallyDefined","_context16","_x63","_x64","_x65","_x66","_x67","_x68","_x69","_x70","_callLoaderOrAction","_callee16","resultType","onReject","runHandler","handler","handlerError","_url","_url2","isSameBasename","contentType","_result$init","_result$init2","_context17","context","requestContext","finish","isResponse","isStaticRequest","protocol","isRouteRequest","statusCode","isDeferredData","deferred","_step6","_iterator6","_step6$value","_step7","_iterator7","_step7$value","processRouteLoaderData","foundError","loaderHeaders","_processRouteLoaderDa","_revalidatingFetchers","newLoaderData","_step8","mergedLoaderData","_iterator8","hasOwnProperty","reverse","find","_temp4","_ref13","errorMessage","resolveData","_x71","_x72","_x73","_x74","_x75","_x76","_resolveDeferredResults","_callee17","signals","_loop","_context19","isRevalidatingLoader","_context18","delegateYield","_x77","_x78","_x79","_resolveDeferredData","_callee18","unwrap","_context20","unwrappedData","getAll","pathMatches","DataRouterContext","React","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useHref","useInRouterContext","UNSAFE_invariant","_React$useContext","navigator","_useResolvedPath","useResolvedPath","joinedPathname","useLocation","useNavigationType","navigationType","useMatch","useIsomorphicLayoutEffect","cb","static","useNavigate","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","useNavigateStable","dataRouterContext","_React$useContext3","routePathnamesJson","UNSAFE_getPathContributingMatches","useNavigateUnstable","OutletContext","useOutletContext","useOutlet","Provider","useParams","routeMatch","_temp2","useRoutes","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","DefaultErrorComponent","useRouteError","stack","lightgrey","preStyles","padding","backgroundColor","style","fontStyle","defaultErrorElement","RenderErrorBoundary","_React$Component","props","errorInfo","routeContext","component","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState2","_dataRouterState","errorIndex","reduceRight","getChildren","Component","element","hookName","ctx","useDataRouterState","useRouteContext","thisRoute","useRouteId","UseRouteId","useNavigation","UseNavigation","useRevalidator","UseRevalidator","useMatches","_useDataRouterState","UseMatches","UNSAFE_convertRouteMatchToUiMatch","useLoaderData","UseLoaderData","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","_state$errors","UseRouteError","useAsyncValue","useAsyncError","blockerId","useBlocker","shouldBlock","_useDataRouterContext","UseBlocker","_React$useState","_React$useState2","setBlockerKey","startTransitionImpl","RouterProvider","fallbackElement","_React$useState3","_React$useState4","setStateImpl","v7_startTransition","setState","Router","DataRoutes","MemoryRouter","historyRef","_React$useState5","_React$useState6","Navigate","jsonPath","Outlet","Route","_props","_ref5$basename","basenameProp","_ref5$children","locationProp","_ref5$navigationType","_ref5$static","staticProp","navigationContext","_locationProp","_locationProp$pathnam","_locationProp$search","_locationProp$hash","_locationProp$state","_locationProp$key","locationContext","trailingPathname","Routes","createRoutesFromChildren","Await","AwaitErrorBoundary","ResolveAwait","AwaitRenderStatus","neverSettledPromise","_React$Component2","_super2","_this$props","pending","renderError","success","_ref8","toRender","renderMatches","updates","createMemoryRouter","defaultMethod","defaultEncType","isHtmlElement","object","tagName","createSearchParams","_formDataSupportsSubmitter","supportedFormEncTypes","getFormEncType","encType","getFormSubmissionInfo","target","attr","isButtonElement","isInputElement","form","isFormDataSubmitterSupported","createBrowserRouter","parseHydrationData","UNSAFE_mapRouteProperties","createHashRouter","_window","__staticRouterHydrationData","deserializeErrors","serialized","_i","_entries$_i","val","__type","UNSAFE_ErrorResponseImpl","__subType","ErrorConstructor","BrowserRouter","HashRouter","HistoryRouter","Link","ref","absoluteHref","onClick","_objectWithoutPropertiesLoose","_excluded","UNSAFE_NavigationContext","isExternal","targetUrl","internalOnClick","useLinkClickHandler","event","defaultPrevented","NavLink","_ref5$ariaCurrent","ariaCurrentProp","_ref5$caseSensitive","_ref5$className","className","classNameProp","_ref5$end","styleProp","_excluded2","routerState","UNSAFE_DataRouterStateContext","nextLocationPathname","isActive","isPending","ariaCurrent","Form","submit","useSubmit","FormImpl","forwardedRef","_ref6$method","onSubmit","_excluded3","useFormAction","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","useScrollRestoration","storageKey","UNSAFE_DataRouterContext","replaceProp","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","locationSearch","defaultSearchParams","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","UseSubmit","currentRouteId","UNSAFE_useRouteId","_getFormSubmissionInf","useSubmitFetcher","fetcherRouteId","UseSubmitFetcher","_getFormSubmissionInf2","UNSAFE_RouteContext","_routeContext$matches","fetcherId","useFetcher","_route$matches","UseFetcher","_React$useState7","_React$useState9","createFetcherForm","_React$useState11","load","fetcherWithComponents","useFetchers","UseFetchers","SCROLL_RESTORATION_STORAGE_KEY","_temp3","_ref14","UseScrollRestoration","scrollRestoration","callback","capture","usePageHide","scrollY","sessionStorage","setItem","sessionPositions","getItem","getKeyWithoutBasename","disableScrollRestoration","el","getElementById","scrollIntoView","scrollTo","useBeforeUnload","usePrompt","when","unstable_useBlocker","confirm","setTimeout","_arrayLikeToArray","arr","len","arr2","_arrayWithHoles","_assertThisInitialized","self","ReferenceError","asyncGeneratorStep","gen","_next","_throw","info","Constructor","_defineProperties","descriptor","protoProps","staticProps","o","allowArrayLike","it","iterator","F","_e","normalCompletion","didErr","step","_e2","Derived","hasNativeReflectConstruct","Super","NewTarget","assertThisInitialized","_getPrototypeOf","__proto__","subClass","superClass","_isNativeReflectConstruct","sham","Proxy","valueOf","_iterableToArray","iter","_nonIterableRest","t","c","asyncIterator","u","toStringTag","define","Generator","Context","makeInvokeMethod","tryCatch","h","l","GeneratorFunction","GeneratorFunctionPrototype","d","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","_sent","dispatchException","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","isNaN","displayName","isGeneratorFunction","awrap","async","rval","complete","_setPrototypeOf","arrayWithHoles","unsupportedIterableToArray","nonIterableRest","arrayLikeToArray","iterableToArray","_unsupportedIterableToArray","minLen"],"sourceRoot":""}