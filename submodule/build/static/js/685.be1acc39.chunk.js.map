{"version":3,"file":"static/js/685.be1acc39.chunk.js","mappings":"sLAGMA,EAAWC,IAAAA,MAAW,kBAAM,qDAAuB,IAE5CC,EAA8B,CAC1C,CACCC,KAAM,IACNC,SAASC,EAAAA,EAAAA,KAACL,EAAQ,KAEnB,CACCG,KAAM,IACNC,SAASC,EAAAA,EAAAA,KAACL,EAAQ,MCOpB,EAf4B,WAC3B,OACCK,EAAAA,EAAAA,KAACJ,IAAAA,SAAc,CAACK,SAAS,aAAYC,UACpCF,EAAAA,EAAAA,KAACG,EAAAA,OAAM,CAAAD,SACLL,EAAUO,KAAI,SAACC,GAAK,OACpBC,EAAAA,EAAAA,eAACC,EAAAA,OAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDH,GAAK,IACTI,IAAKJ,EAAMP,OACV,OAKP,ECJA,EARsB,WACrB,OACCE,EAAAA,EAAAA,KAACU,EAAAA,cAAa,CAAAR,UACbF,EAAAA,EAAAA,KAACW,EAAS,KAGb,ECGA,EAZwB,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,mCAAqBC,MAAK,SAAAC,GAAkD,IAA/CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,EACV,GAEJ,E,gFCRMS,GAAiBC,EAAAA,EAAAA,WAAU,CAC/BC,YAAa,iBACbC,WAAWC,EAAAA,EAAAA,gBAAe,CACxBC,QAASC,EAAAA,KAEXC,UAAW,SAACC,GAAO,MAAM,CACvBC,aAAcD,EAAQE,MAA+C,CACnEA,MAAO,iBAAM,mBAAmB,IAEnC,IAIH,GADwCV,EAAzBW,qBACf,GCbA,GAAAC,EAAA,CACCC,KAAMC,EAAAA,KAAYC,EAAAA,EAAAA,GAAAH,EACjBI,EAAAA,EAAad,YAAcc,EAAAA,EAAaC,UAAOF,EAAAA,EAAAA,GAAAH,EAC/CZ,EAAeE,YAAcF,EAAeiB,SAAOL,GCArD,GAJgBM,EAAAA,EAAAA,iBAAgBC,G,uCCU1BC,EAAmB,CALsC,SAACC,GAAK,OAAK,SAACC,GAAI,OAAK,SAACC,GAEnFD,EAAKC,EACP,CAAE,CAAD,GAGKC,EAAgB,CAACR,EAAAA,EAAaS,WAAYzB,EAAeyB,YAUzDJ,GAAQK,EAAAA,EAAAA,gBAAe,CAC3BT,QATmB,SAACU,EAAYJ,GAChC,MAAoB,2BAAhBA,EAAOK,KACFX,OAAQY,EAAWN,GAGrBN,EAAQU,EAAOJ,EACxB,EAIEE,YAAYK,GAAA,IAAIC,EAAAA,iBACbC,OAAOC,EAAAA,EAAOC,MACdF,OAAMG,MAAAL,EAAIN,EAAaQ,OAAKZ,IAC/BgB,UAAU,KAMZC,EAAAA,EAAAA,gBAAehB,EAAMiB,UAErB,QC7BaC,EAAAA,WACZC,SAASC,eAAe,SAEpBC,QACJ/D,EAAAA,EAAAA,KAACJ,IAAAA,WAAgB,CAAAM,UAChBF,EAAAA,EAAAA,KAACgE,EAAAA,SAAQ,CAACtB,MAAOA,EAAMxC,UACtBF,EAAAA,EAAAA,KAACiE,EAAG,SAQPC,G,8ECtBO,IAAKC,EAAQ,SAARA,GAAQ,OAARA,EAAQ,UAARA,EAAQ,UAARA,EAAQ,0BAARA,CAAQ,MCEPC,EAAW,YAEXC,EAAiB,CAC7BF,EAASG,IACTH,EAASI,IACTJ,EAASK,Y,uDCPV,IAEaC,EAAkB,SAAChE,GAG/B,IAFA,IAAMiE,EAASb,SAASa,OAAOC,MAAM,KAE5BC,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IAAK,CACvC,IAAME,EAAeJ,EAAOE,GAAGD,MAAM,KAGrC,GAFAI,QAAQC,IAAIF,GAERA,EAAa,GAAGG,SAAWxE,EAAK,OAAOqE,EAAa,EACzD,CAGD,C,oICRaI,E,QAAkDC,Y,qCC4BxD,SAASC,EAAiBC,GAChC,OAAOC,IAAAA,OAAWD,EACnB,C,2CC3BME,EAAkC,CACvCC,aAAaf,EAAAA,EAAAA,GAAgB,eAC7BgB,WAAWhB,EAAAA,EAAAA,GAAgB,aAC3BiB,SAAUN,GAAiBX,EAAAA,EAAAA,GAAgB,iBAGtCkB,GAAYC,EAAAA,EAAAA,aAAY,CAC7BC,KAAM,OACNN,aAAAA,EACAO,SAAU,CACTC,eAAgB,SACf/C,EACAJ,GAGA,OADAoD,EAAAA,EAAAA,GAAU,cAAepD,EAAOqD,SACzBC,IAAQlD,GAAO,SAACmD,GACtBA,EAAWX,YAAc5C,EAAOqD,QAChCE,EAAWT,SAAWN,EAAiBxC,EAAOqD,QAC/C,GACD,EACAG,aAAc,SACbpD,EACAJ,GAIA,OAFAoD,EAAAA,EAAAA,GAAU,YAAapD,EAAOqD,SAEvBC,IAAQlD,GAAO,SAACmD,GACtBA,EAAWV,UAAY7C,EAAOqD,OAC/B,GACD,EACAI,kBAAmB,SAACrD,GAEnB,OADAsD,EAAAA,EAAAA,IAA8B,eACvBJ,IAAQlD,GAAO,SAACmD,GACtBA,EAAWX,YAAc,KACzBW,EAAWT,SAAW,IACvB,GACD,KAIKa,EACNZ,EAAUa,QADIT,EAAcQ,EAAdR,eAAgBM,EAAiBE,EAAjBF,kBAGlBI,GAHiDF,EAAZH,aAGrB,WAAH,OAASlB,GAAe,SAAClC,GAAK,OAAKA,EAAMd,IAAI,GAAE,GAEzE,EAAeyD,EAAiB,O,gFCrDzB,ICEMe,EDFuBC,6BCGvBhF,EDFcgF,0B,qHEYrBnF,GAAYC,EAAAA,EAAAA,gBAAe,CAChCC,QAASgF,EAAAA,GACTE,eAAgB,SAACC,EAASC,GACzB,IAAM9D,EAAQ8D,EAAIC,WAClB,GAAqB,UAAjBD,EAAIE,SAAsB,CAC7B,IAAMxB,EACLxC,EAAMd,KAAKsD,cAAef,EAAAA,EAAAA,GAAgB,eAC3CoC,EAAQI,IAAI,gBAAgB,UAAD5D,OAAYmC,GACxC,CACA,OAAOqB,CACR,IAGKK,EAA+B,eAAAnG,GAAAoG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,EAAMT,EAAKU,GAAY,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAX,EAAAA,EAAAA,KAAAY,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAtF,MAAA,cAAAsF,EAAAtF,KAAA,EAC/CnB,EACrB+F,EACAT,EACAU,GACA,OAJW,GAANI,EAAMK,EAAAE,KAMI,QANJV,EAMRG,EAAOQ,aAAK,IAAAX,IAAZA,EAAcY,KAAI,CAAAJ,EAAAtF,KAAA,YACgB,KAArB,QAAZkF,EAAAD,EAAOQ,aAAK,IAAAP,GAAM,QAANC,EAAZD,EAAcQ,YAAI,IAAAP,OAAN,EAAZA,EAAoBQ,UAAkB,CAAAL,EAAAtF,KAAA,eAAAsF,EAAAM,OAAA,SAElCX,GAAM,OAKK,kCADAA,EAAOQ,MAAMC,KAAKG,UAEpC1B,EAAInD,UAAS0C,EAAAA,EAAAA,QACbC,EAAAA,EAAAA,IAA8B,gBAC9B,OAOD,OAJKyB,EAA4B,QAAdL,EAAGE,EAAOa,YAAI,IAAAf,GAAU,QAAVC,EAAXD,EAAagB,gBAAQ,IAAAf,OAAV,EAAXA,EAAuBd,QAAQ8B,IAAI,mBAEzD7B,EAAInD,UAASoC,EAAAA,EAAAA,IAAegC,KAC5B/B,EAAAA,EAAAA,GAAU,cAAe+B,IACzBE,EAAAM,OAAA,SAEMX,GAAM,yBAAAK,EAAAW,OAAA,GAAAtB,EAAA,KACb,gBA5BoCuB,EAAAC,EAAAC,GAAA,OAAAhI,EAAAyC,MAAA,KAAAwF,UAAA,KA8BxBC,GAAW3H,EAAAA,EAAAA,WAAU,CACjCE,UAAW0F,EACXgC,SAAU7E,EAAAA,EACVzC,UAAW,iBAAO,CAAC,CAAC,IAGrB,K,8EC9DA,IAAMuH,EAAaxC,uBAENlC,EAAkB,SAAChE,GAG/B,IAFA,IAAMiE,EAASb,SAASa,OAAOC,MAAM,KAE5BC,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IAAK,CACvC,IAAME,EAAeJ,EAAOE,GAAGD,MAAM,KACrC,GAAIG,EAAa,KAAOrE,EAAK,OAAOqE,EAAa,EAClD,CAGD,EAEakB,EAAY,SAACvF,EAAa2I,GACtC,IAAMC,EAASF,EAAYxE,MAAM,WAAW,GAE5Cd,SAASa,OAAM,GAAArB,OAAM5C,EAAG,KAAA4C,OAAI+F,EAAK,YAAA/F,OAAWgG,EAC7C,C,sEC0Ba/C,EAAgC,SAAC7F,GAE5C,IACE,IAAM6I,EAAoBC,OAAOC,aAAaC,QAAQrF,EAAAA,GAChDsF,EAAmBC,KAAKC,MAAMN,GAChCE,cAA4C,kBAArBE,IACN,kBAARjJ,UACFiJ,EAAiBjJ,GAGtBA,aAAeoJ,OAAOpJ,EAAIqJ,SAAQ,SAACC,GAAY,cAAYL,EAAiBK,EAAK,IAErFR,OAAOC,aAAaQ,QAAQ5F,EAAAA,EAAUuF,KAAKM,UAAUP,IAEzD,CAAE,MAAOtB,GACPrD,QAAQqD,MAAM,0FAAD/E,OAC+E+E,GAE9F,CACF,C","sources":["routes/routeList.tsx","routes/index.tsx","App.tsx","reportWebVitals.ts","services/public.api.ts","redux/moduleReducer.ts","combinedReducers.ts","store.ts","bootstrap.tsx","services/enums.ts","constants/index.tsx","features/Home/utils.ts","hooks/useRedux.ts","utils/parserUtils.ts","services/authService/slice.ts","config/index.ts","services/constants.ts","services/secured.api.ts","utils/cookieUtils.ts","utils/localStorageUtils.ts"],"sourcesContent":["import { PathRouteProps } from 'react-router-dom';\nimport React from 'react';\n\nconst HomePage = React.lazy(() => import('../pages/Home'));\n\nexport const routeList: PathRouteProps[] = [\n\t{\n\t\tpath: '/',\n\t\telement: <HomePage />,\n\t},\n\t{\n\t\tpath: '*',\n\t\telement: <HomePage />,\n\t},\n];\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { routeList } from './routeList';\n\nconst AppRoutes: React.FC = () => {\n\treturn (\n\t\t<React.Suspense fallback=\"Loading...\">\n\t\t\t<Routes>\n\t\t\t\t{routeList.map((route) => (\n\t\t\t\t\t<Route\n\t\t\t\t\t\t{...route}\n\t\t\t\t\t\tkey={route.path as string}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</Routes>\n\t\t</React.Suspense>\n\t);\n};\n\nexport default AppRoutes;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport AppRoutes from './routes';\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<AppRoutes />\n\t\t</BrowserRouter>\n\t);\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { TFetchResponse, TPublicKeyResponse } from '@/services/types';\r\nimport { DEFAULT_IAM_URL } from '@/services/constants';\r\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/dist/query/react';\r\n\r\nconst publicKeySlice = createApi({\r\n  reducerPath: 'publicKeySlice',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: DEFAULT_IAM_URL,\r\n  }),\r\n  endpoints: (builder) => ({\r\n    getPublicKey: builder.query<TFetchResponse<TPublicKeyResponse>, any>({\r\n      query: () => '/public/publickey',\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetPublicKeyQuery } = publicKeySlice;\r\nexport default publicKeySlice;\r\n","import authReducers from '@/services/authService/slice';\r\nimport baseApiSlice from '@/services/secured.api';\r\nimport publicKeySlice from '@/services/public.api';\r\n\r\nexport default {\r\n\tauth: authReducers,\r\n\t[baseApiSlice.reducerPath]: baseApiSlice.reducer,\r\n\t[publicKeySlice.reducerPath]: publicKeySlice.reducer,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport moduleReducers from '@/redux/moduleReducer';\r\n\r\nconst reducer = combineReducers(moduleReducers);\r\n\r\nexport type RootState = ReturnType<typeof reducer>;\r\n\r\nexport default reducer;\r\n","import { AnyAction, configureStore, Middleware, MiddlewareArray } from '@reduxjs/toolkit';\r\nimport reducer, { RootState } from './combinedReducers';\r\nimport logger from 'redux-logger';\r\nimport thunk, { ThunkDispatch } from 'redux-thunk';\r\nimport { setupListeners } from '@reduxjs/toolkit/dist/query';\r\nimport publicKeySlice from './services/public.api';\r\nimport baseApiSlice from './services/secured.api';\r\n\r\nconst exampleCustomMiddleware: Middleware<object, RootState> = (store) => (next) => (action) => {\r\n  // const state = store.getState();\r\n  next(action);\r\n};\r\n\r\nconst customMiddleware = [exampleCustomMiddleware];\r\nconst apiMiddleware = [baseApiSlice.middleware, publicKeySlice.middleware];\r\n\r\nconst reducerProxy = (state: any, action: AnyAction) => {\r\n  if (action.type === 'auth/removeAccessToken') {\r\n    return reducer(undefined, action);\r\n  }\r\n\r\n  return reducer(state, action);\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: reducerProxy,\r\n  middleware: new MiddlewareArray()\r\n    .concat(thunk, logger)\r\n    .concat(...apiMiddleware, ...customMiddleware),\r\n  devTools: true,\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type AppThunkDispatch = ThunkDispatch<RootState, any, AnyAction>;\r\n\r\nsetupListeners(store.dispatch);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nconst root = ReactDOM.createRoot(\n\tdocument.getElementById('root') as HTMLElement\n);\nroot.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export enum EnumTags {\r\n  ALL = 'all',\r\n  CMS = 'cms',\r\n  PENDINGTASK = 'PENDINGTASK',\r\n}\r\n\r\nexport enum EDirection {\r\n  ASC = 'ASC',\r\n  DESC = 'DESC',\r\n}\r\n\r\nexport enum HTTPMethod {\r\n  GET = 'GET',\r\n  POST = 'POST',\r\n}\r\n","import { EnumTags } from '@/services/enums';\r\n\r\nexport const APP_NAME = 'container';\r\n\r\nexport const TAGS: string[] = [\r\n\tEnumTags.ALL,\r\n\tEnumTags.CMS,\r\n\tEnumTags.PENDINGTASK,\r\n];\r\n","const MODULE_URL = process.env.REACT_APP_MODULE_URL;\n\nexport const getParsedCookie = (key: string) => {\n\tconst cookie = document.cookie.split(';');\n\n\tfor (let i = 0; i < cookie.length; i++) {\n\t\tconst parsedCookie = cookie[i].split('=');\n\t\tconsole.log(parsedCookie);\n\n\t\tif (parsedCookie[0].trim() === key) return parsedCookie[1];\n\t}\n\n\treturn undefined;\n};\n\nexport const setCookie = (key: string, value: string) => {\n\tconst domain = MODULE_URL?.split('http://')[1];\n\n\tdocument.cookie = `${key}=${value};domain=${domain}`;\n};\n","import { RootState } from '@/combinedReducers';\r\nimport { AppDispatch } from '@/store';\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { UploadFile } from 'antd';\r\nimport jwt, { JwtPayload } from 'jsonwebtoken';\r\nimport { v4 as uuid4 } from 'uuid';\r\n\r\nexport const parseFileObj = async (\r\n\tfile: Blob\r\n): Promise<string | ArrayBuffer | null | undefined> => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader: FileReader = new FileReader();\r\n\t\tlet base64: string | ArrayBuffer | null | undefined;\r\n\r\n\t\treader.onload = (fileLoadedEvent) => {\r\n\t\t\tbase64 = fileLoadedEvent?.target?.result;\r\n\t\t\tresolve(base64);\r\n\t\t};\r\n\r\n\t\treader.onerror = () => reject('Something wrong with the file');\r\n\t\tif (file) reader.readAsDataURL(file);\r\n\t});\r\n};\r\n\r\nexport const capitalize = (word = '', eachWord = false): string | undefined => {\r\n\tword = word.toLocaleLowerCase();\r\n\r\n\tif (!eachWord) {\r\n\t\tconst firstLetter: string = word[0].toUpperCase();\r\n\t\tconst rest: string = word.slice(1);\r\n\t\treturn `${firstLetter}${rest}`;\r\n\t}\r\n\r\n\treturn word;\r\n};\r\n\r\nexport function parseAccessToken(token: string): null | JwtPayload {\r\n\treturn jwt.decode(token) as JwtPayload | null;\r\n}\r\n\r\nexport const limitWord = (word = '', limit = 10): string => {\r\n\tif (word.length > 10) return `${word.slice(0, limit)}...`;\r\n\r\n\treturn word;\r\n};\r\n\r\nexport function parseFileList(\r\n\tfileList: string[] | UploadFile<any>[]\r\n): UploadFile<any>[] {\r\n\treturn fileList.map((file) => {\r\n\t\tconst uid = uuid4();\r\n\t\tif (typeof file === 'string') {\r\n\t\t\treturn {\r\n\t\t\t\tuid: uid,\r\n\t\t\t\tname: uid,\r\n\t\t\t\tpreview: file,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn file;\r\n\t});\r\n}\r\n","import { useAppSelector } from '@/hooks/useRedux';\r\nimport { removeLocalStorageObjectValue } from '@/utils/localStorageUtils';\r\nimport { parseAccessToken } from '@/utils/parserUtils';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport produce from 'immer';\r\nimport { TAuthInitialState } from './types';\r\nimport { getParsedCookie, setCookie } from '@/utils/cookieUtils';\r\n\r\nconst initialState: TAuthInitialState = {\r\n\taccessToken: getParsedCookie('accessToken'),\r\n\tpublicKey: getParsedCookie('publicKey'),\r\n\tuserInfo: parseAccessToken(getParsedCookie('accessToken')),\r\n};\r\n\r\nconst authSlice = createSlice({\r\n\tname: 'auth',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetAccessToken: (\r\n\t\t\tstate: TAuthInitialState,\r\n\t\t\taction: PayloadAction<string>\r\n\t\t) => {\r\n\t\t\tsetCookie('accessToken', action.payload);\r\n\t\t\treturn produce(state, (draftState) => {\r\n\t\t\t\tdraftState.accessToken = action.payload;\r\n\t\t\t\tdraftState.userInfo = parseAccessToken(action.payload);\r\n\t\t\t});\r\n\t\t},\r\n\t\tsetPublicKey: (\r\n\t\t\tstate: TAuthInitialState,\r\n\t\t\taction: PayloadAction<string>\r\n\t\t) => {\r\n\t\t\tsetCookie('publicKey', action.payload);\r\n\r\n\t\t\treturn produce(state, (draftState) => {\r\n\t\t\t\tdraftState.publicKey = action.payload;\r\n\t\t\t});\r\n\t\t},\r\n\t\tremoveAccessToken: (state: TAuthInitialState) => {\r\n\t\t\tremoveLocalStorageObjectValue('accessToken');\r\n\t\t\treturn produce(state, (draftState) => {\r\n\t\t\t\tdraftState.accessToken = null;\r\n\t\t\t\tdraftState.userInfo = null;\r\n\t\t\t});\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { setAccessToken, removeAccessToken, setPublicKey } =\r\n\tauthSlice.actions;\r\n\r\nexport const useSelectAuth = () => useAppSelector((state) => state.auth);\r\n\r\nexport default authSlice.reducer;\r\n","export const ENV_API_URL_LOCATION = process.env.REACT_APP_API_URL_LOCATION;\r\nexport const ENV_IAM_URL = process.env.REACT_APP_IAM_URL;\r\n","import { ENV_API_URL_LOCATION, ENV_IAM_URL } from '@/config';\r\n\r\nexport const API_BASE_URL = ENV_API_URL_LOCATION;\r\nexport const DEFAULT_IAM_URL = ENV_IAM_URL || 'http://34.101.71.39:9037';\r\n\r\nexport const API_ENV = {\r\n  refetchOnFocus: true,\r\n  refetchOnReconnect: true,\r\n  refetchOnMountOrArgChange: true,\r\n};\r\n","import {\r\n\tremoveAccessToken,\r\n\tsetAccessToken,\r\n} from '@/services/authService/slice';\r\nimport { RootState } from '@/combinedReducers';\r\nimport { TBaseQueryFn, TQueryReturnValue } from '@/services/types';\r\nimport { removeLocalStorageObjectValue } from '@/utils/localStorageUtils';\r\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/dist/query/react';\r\nimport { API_BASE_URL } from '@/services/constants';\r\nimport { TAGS } from '@/constants';\r\nimport { getParsedCookie } from '../features/Home/utils';\r\nimport { setCookie } from '@/utils/cookieUtils';\r\n\r\nconst baseQuery = fetchBaseQuery({\r\n\tbaseUrl: API_BASE_URL,\r\n\tprepareHeaders: (headers, api) => {\r\n\t\tconst state = api.getState() as RootState;\r\n\t\tif (api.endpoint !== 'login') {\r\n\t\t\tconst accessToken =\r\n\t\t\t\tstate.auth.accessToken || getParsedCookie('accessToken');\r\n\t\t\theaders.set('Authorization', `Bearer ${accessToken}`);\r\n\t\t}\r\n\t\treturn headers;\r\n\t},\r\n});\r\n\r\nconst baseQueryWithAuth: TBaseQueryFn = async (args, api, extraOptions) => {\r\n\tconst result = (await baseQuery(\r\n\t\targs,\r\n\t\tapi,\r\n\t\textraOptions\r\n\t)) as TQueryReturnValue;\r\n\r\n\tif (result.error?.data) {\r\n\t\tif (result.error?.data?.business === false) {\r\n\t\t\t// parseErrorMessage2('error.business.false');\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\t// parseErrorMessage2(result.error?.data.message);\r\n\t\tconst errMessage = result.error.data.message;\r\n\t\tif (errMessage === 'jwtverification.exception.001') {\r\n\t\t\tapi.dispatch(removeAccessToken());\r\n\t\t\tremoveLocalStorageObjectValue('accessToken');\r\n\t\t}\r\n\t}\r\n\r\n\tconst newAccessToken = result.meta?.response?.headers.get('access_token');\r\n\tif (newAccessToken) {\r\n\t\tapi.dispatch(setAccessToken(newAccessToken));\r\n\t\tsetCookie('accessToken', newAccessToken);\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\nexport const apiSlice = createApi({\r\n\tbaseQuery: baseQueryWithAuth,\r\n\ttagTypes: TAGS,\r\n\tendpoints: () => ({}),\r\n});\r\n\r\nexport default apiSlice;\r\n","const MODULE_URL = process.env.REACT_APP_MODULE_URL;\n\nexport const getParsedCookie = (key: string) => {\n\tconst cookie = document.cookie.split(';');\n\n\tfor (let i = 0; i < cookie.length; i++) {\n\t\tconst parsedCookie = cookie[i].split('=');\n\t\tif (parsedCookie[0] === key) return parsedCookie[1];\n\t}\n\n\treturn undefined;\n};\n\nexport const setCookie = (key: string, value: string) => {\n\tconst domain = MODULE_URL?.split('http://')[1];\n\n\tdocument.cookie = `${key}=${value};domain=${domain}`;\n};\n","import { APP_NAME } from '@/constants';\r\n\r\nexport const getLocalStorageObjectValue = <T>(key: string | string[]): T | undefined => {\r\n  //get value from local storage which the type of value is object\r\n  try {\r\n    if (window.localStorage.getItem(APP_NAME)) {\r\n      const getItemValue: Record<string, T> = JSON.parse(window.localStorage.getItem(APP_NAME));\r\n      if (key instanceof Array) {\r\n        return key.reduce((result, item) => {\r\n          return Object.assign(result, { [item]: getItemValue[item] });\r\n        }, {} as T);\r\n      }\r\n      return getItemValue[key] || undefined;\r\n    }\r\n    return undefined;\r\n  } catch (error) {\r\n    console.error(\r\n      `Error when get local storage object value function is triggered - LocalStorageUtils. ${error}`,\r\n    );\r\n  }\r\n\r\n  return undefined;\r\n};\r\n\r\nexport const setLocalStorageObjectItem = (value: object = {}): void => {\r\n  //set object value to local storage\r\n  try {\r\n    const getItemValue: string = window.localStorage.getItem(APP_NAME) as string;\r\n\r\n    const localStorageItem = JSON.parse(getItemValue);\r\n    if (localStorageItem && typeof localStorageItem === 'object')\r\n      return window.localStorage.setItem(\r\n        APP_NAME,\r\n        JSON.stringify({ ...localStorageItem, ...value }),\r\n      );\r\n    return window.localStorage.setItem(APP_NAME, JSON.stringify({ ...value }));\r\n  } catch (error) {\r\n    console.error(\r\n      `Error when set local storage object item function is triggered - LocalStorageUtils. ${error}`,\r\n    );\r\n  }\r\n};\r\n\r\nexport const removeLocalStorageObjectValue = (key: string | string[]): void => {\r\n  //remove the existing value from the local storage's object.\r\n  try {\r\n    const getItemValue: any = window.localStorage.getItem(APP_NAME) as string;\r\n    const localStorageItem = JSON.parse(getItemValue);\r\n    if (localStorage && typeof localStorageItem === 'object') {\r\n      if (typeof key === 'string') {\r\n        delete localStorageItem[key as string];\r\n      }\r\n\r\n      if (key instanceof Array) key.forEach((item: string) => delete localStorageItem[item]);\r\n\r\n      window.localStorage.setItem(APP_NAME, JSON.stringify(localStorageItem));\r\n    }\r\n  } catch (error) {\r\n    console.error(\r\n      `Error when remove local storage object item function is triggered - LocalStorageUtils. ${error}`,\r\n    );\r\n  }\r\n};\r\n"],"names":["HomePage","React","routeList","path","element","_jsx","fallback","children","Routes","map","route","_createElement","Route","_objectSpread","key","BrowserRouter","AppRoutes","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","publicKeySlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","DEFAULT_IAM_URL","endpoints","builder","getPublicKey","query","useGetPublicKeyQuery","_auth$baseApiSlice$re","auth","authReducers","_defineProperty","baseApiSlice","reducer","combineReducers","moduleReducers","customMiddleware","store","next","action","apiMiddleware","middleware","configureStore","state","type","undefined","_MiddlewareArray$conc","MiddlewareArray","concat","thunk","logger","apply","devTools","setupListeners","dispatch","ReactDOM","document","getElementById","render","Provider","App","reportWebVitals","EnumTags","APP_NAME","TAGS","ALL","CMS","PENDINGTASK","getParsedCookie","cookie","split","i","length","parsedCookie","console","log","trim","useAppSelector","useSelector","parseAccessToken","token","jwt","initialState","accessToken","publicKey","userInfo","authSlice","createSlice","name","reducers","setAccessToken","setCookie","payload","produce","draftState","setPublicKey","removeAccessToken","removeLocalStorageObjectValue","_authSlice$actions","actions","useSelectAuth","API_BASE_URL","process","prepareHeaders","headers","api","getState","endpoint","set","baseQueryWithAuth","_asyncToGenerator","_regeneratorRuntime","mark","_callee","args","extraOptions","_result$error","_result$meta","_result$meta$response","result","_result$error2","_result$error2$data","newAccessToken","wrap","_context","prev","sent","error","data","business","abrupt","message","meta","response","get","stop","_x","_x2","_x3","arguments","apiSlice","tagTypes","MODULE_URL","value","domain","getItemValue","window","localStorage","getItem","localStorageItem","JSON","parse","Array","forEach","item","setItem","stringify"],"sourceRoot":""}